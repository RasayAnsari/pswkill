-- Assignment SQL 2
use mavenmovies;
select * from rental;
select * from payment;
select * from film;
-- Retrieve the total number of rentals made in the Sakila database.
select count(rental_id) from rental;

-- Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(rental_duration) from film;

-- Display the first name and last name of customers in uppercase.
select upper(concat(first_name,' ',last_name)) as Full_Name from customer;

-- Extract the month from the rental date and display it alongside the rental ID.
select month(rental_date),rental_id from rental;
select * from rental;
select * from customer;

-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
select customer_id,count(rental_id) from rental group by customer_id;
select * from inventory;
select * from rental;
select * from payment;
select * from customer;
select * from store;

-- Find the total revenue generated by each store.
select store_id,sum(amount) as Total_Revenue from rental inner join payment on rental.rental_id = payment.rental_id inner join customer on 
customer.store_id = payment.staff_id group by store_id;
select * from payment;
select * from store;
select store_id, sum(amount) from store left join payment on store.manager_staff_id = payment.staff_id group by store_id;

-- Display the title of the movie, customer s first name, and last name who rented it.
select * from film;
select * from inventory;
select * from rental;
select * from customer;
select title, first_name,last_name from film inner join inventory on film.film_id = inventory.film_id inner join rental on inventory.inventory_id = rental.inventory_id
inner join customer on rental.customer_id = customer.customer_id;

-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
select * from film_actor;
select * from film;
select * from actor;
select concat(first_name,' ',last_name) as Actor_Name,title from actor right join film_actor on actor.actor_id = film_actor.actor_id 
right join film on film_actor.film_id = film.film_id where title = 'Gone with the Wind';
select title from film where title = 'Gone with the wind';

-- Determine the total number of rentals for each category of movies.
select * from rental;
select * from category;
select * from film;
select * from film_category;
select name as Movie_Category, count(rental_duration) as Total_Rentals from category inner join film_category on category.category_id = film_category.category_id
inner join film on film_category.film_id = film.film_id group by name;

-- Find the average rental rate of movies in each language.
select * from film;
select * from language;
select avg(rental_rate),name as Languages from film inner join language on film.language_id = language.language_id group by name;

-- Retrieve the customer names along with the total amount they've spent on rentals.
select * from customer;
select * from payment;
select * from rental;
select concat(first_name,' ',last_name) as Customer_Name, sum(amount) as Total_Amount from customer inner join payment on customer.customer_id = payment.customer_id
inner join rental on payment.rental_id = rental.rental_id group by Customer_Name;

-- List the titles of movies rented by each customer in a particular city (e.g., 'London').
select * from customer; -- 4 customer_id,store_id,address_id
select * from address; -- 5 address_id,city_id
select * from city; -- 6 city_id,country_id
select * from rental; -- 3 rental_id,inventory_id,customer_id,staff_id
select * from inventory; -- 2 inventory_id,film_id,store_id 
select * from film; -- 1 film_id

select concat(first_name,' ',last_name) as Customer_Name,title as Rented_Titles,City from film 
inner join inventory on film.film_id = inventory.inventory_id
inner join rental on inventory.inventory_id = rental.inventory_id 
inner join customer on rental.customer_id = customer.customer_id 
inner join address on customer.address_id = address.address_id 
inner join city on address.city_id = city.city_id where city = 'London' group by Customer_Name;

-- Display the top 5 rented movies along with the number of times they've been rented.
select * from film; -- film_id,title,language_id,rental_duration
select * from inventory; -- inventory_id, film_id, store_id
select * from rental; -- rental_id, inventory_id, customer_id, staff_id
select title, count(rental_id) as Top_Rented from film inner join inventory on film.film_id = inventory.film_id
inner join rental on inventory.inventory_id = rental.inventory_id group by title order by rental_duration desc limit 5;

-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
select * from rental; -- rental_id, inventory_id, customer_id, staff_id
select * from inventory; -- inventory_id, film_id, store_id
select * from customer; -- customer_id, store_id, address_id
select * from store;
select customer.customer_id, concat(first_name,' ',last_name) as Name,store.store_id from customer inner join rental on customer.customer_id = rental.customer_id inner join
inventory on rental.inventory_id = inventory.inventory_id inner join store on inventory.store_id = store.store_id where store.store_id in (1,2) group by customer_id
having count(distinct store.store_id) limit 10;
